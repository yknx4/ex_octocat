# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule ExOctocat.Model.Integration do
  @moduledoc """
  GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :slug,
    :node_id,
    :owner,
    :name,
    :description,
    :external_url,
    :html_url,
    :created_at,
    :updated_at,
    :permissions,
    :events,
    :installations_count,
    :client_id,
    :client_secret,
    :webhook_secret,
    :pem
  ]

  @type t :: %__MODULE__{
          :id => integer(),
          :slug => String.t() | nil,
          :node_id => String.t(),
          :owner => SimpleUser | nil,
          :name => String.t(),
          :description => String.t() | nil,
          :external_url => String.t(),
          :html_url => String.t(),
          :created_at => DateTime.t(),
          :updated_at => DateTime.t(),
          :permissions => %{optional(String.t()) => String.t()},
          :events => [String.t()],
          :installations_count => integer() | nil,
          :client_id => String.t() | nil,
          :client_secret => String.t() | nil,
          :webhook_secret => String.t() | nil,
          :pem => String.t() | nil
        }
end

defimpl Poison.Decoder, for: ExOctocat.Model.Integration do
  import ExOctocat.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:owner, :struct, ExOctocat.Model.SimpleUser, options)
  end
end

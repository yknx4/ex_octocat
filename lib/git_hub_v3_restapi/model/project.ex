# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule ExOctocat.Model.Project do
  @moduledoc """
  Projects are a way to organize columns and cards of work.
  """

  @derive [Poison.Encoder]
  defstruct [
    :owner_url,
    :url,
    :html_url,
    :columns_url,
    :id,
    :node_id,
    :name,
    :body,
    :number,
    :state,
    :creator,
    :created_at,
    :updated_at,
    :organization_permission,
    :private
  ]

  @type t :: %__MODULE__{
          :owner_url => String.t(),
          :url => String.t(),
          :html_url => String.t(),
          :columns_url => String.t(),
          :id => integer(),
          :node_id => String.t(),
          :name => String.t(),
          :body => String.t() | nil,
          :number => integer(),
          :state => String.t(),
          :creator => SimpleUser | nil,
          :created_at => DateTime.t(),
          :updated_at => DateTime.t(),
          :organization_permission => String.t() | nil,
          :private => boolean() | nil
        }
end

defimpl Poison.Decoder, for: ExOctocat.Model.Project do
  import ExOctocat.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:creator, :struct, ExOctocat.Model.SimpleUser, options)
  end
end

# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule ExOctocat.Model.Installation do
  @moduledoc """
  Installation
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :account,
    :repository_selection,
    :access_tokens_url,
    :repositories_url,
    :html_url,
    :app_id,
    :target_id,
    :target_type,
    :permissions,
    :events,
    :created_at,
    :updated_at,
    :single_file_name,
    :has_multiple_single_files,
    :single_file_paths,
    :app_slug,
    :suspended_by,
    :suspended_at,
    :contact_email
  ]

  @type t :: %__MODULE__{
          :id => integer(),
          :account => SimpleUser | nil,
          :repository_selection => String.t(),
          :access_tokens_url => String.t(),
          :repositories_url => String.t(),
          :html_url => String.t(),
          :app_id => integer(),
          :target_id => integer(),
          :target_type => String.t(),
          :permissions => ExOctocat.Model.AppPermissions.t(),
          :events => [String.t()],
          :created_at => DateTime.t(),
          :updated_at => DateTime.t(),
          :single_file_name => String.t() | nil,
          :has_multiple_single_files => boolean() | nil,
          :single_file_paths => [String.t()] | nil,
          :app_slug => String.t(),
          :suspended_by => SimpleUser | nil,
          :suspended_at => DateTime.t() | nil,
          :contact_email => String.t() | nil
        }
end

defimpl Poison.Decoder, for: ExOctocat.Model.Installation do
  import ExOctocat.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:account, :struct, ExOctocat.Model.SimpleUser, options)
    |> deserialize(:permissions, :struct, ExOctocat.Model.AppPermissions, options)
    |> deserialize(:suspended_by, :struct, ExOctocat.Model.SimpleUser, options)
  end
end
